/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.4.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-03-27T14:42:07.300067+05:30[Asia/Kolkata]", comments = "Generator version: 7.4.0")
@Validated
@Tag(name = "promo-balance-transfer", description = "the promo-balance-transfer API")
public interface PromoBalanceTransferApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * PUT /promo-balance-transfer/process-transfer : Processing promotional balance transfer
     *
     * @param body  (optional)
     * @return Balance transferred successfully, account updated (status code 200)
     */
    @Operation(
        operationId = "promoBalanceTransferProcessTransferPut",
        summary = "Processing promotional balance transfer",
        responses = {
            @ApiResponse(responseCode = "200", description = "Balance transferred successfully, account updated")
        }
    )
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/promo-balance-transfer/process-transfer",
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Void> promoBalanceTransferProcessTransferPut(
        @Parameter(name = "body", description = "") @Valid @RequestBody(required = false) Object body
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /promo-balance-transfer/send-offer : Sending promotional balance transfer offer
     *
     * @param body  (optional)
     * @return Promotional offer sent to customer (status code 201)
     */
    @Operation(
        operationId = "promoBalanceTransferSendOfferPost",
        summary = "Sending promotional balance transfer offer",
        responses = {
            @ApiResponse(responseCode = "201", description = "Promotional offer sent to customer")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/promo-balance-transfer/send-offer",
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Void> promoBalanceTransferSendOfferPost(
        @Parameter(name = "body", description = "") @Valid @RequestBody(required = false) Object body
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
